pipeline {
    agent any
parameters {
       //string(name: 'terraform_path', defaultValue: 'terraform/curated/ocpr_cdc/gem\nterraform/raw/ocpr/gem/sink/consumer\nterraform/raw/ocpr/gem/source/http\n', description: 'Enter a terraform path, like terraform/domains/dcus/ocpr')
        choice(name: 'terraform_path', choices: "terraform/curated/ocpr_cdc/gem\nterraform/raw/ocpr/gem/sink/consumer\nterraform/raw/ocpr/gem/source/http", description: "Enter a terraform path, like terraform/domains/dcus/ocpr")
  }
    stages {
      stage("Terraform Init") {
        when {
          expression {
              env.BRANCH_NAME == "k9-version"
          }
        }
        steps {
            script {
            def tfHome = tool name: 'Terraform'
            env.PATH = "${tfHome}:${env.PATH}"
            echo 'terraform init'
                terraformAction("init")
            }
        }
   }
       stage("The Terraform Validate") {
         steps {
              echo "terraform validate"
             terraformAction("validate")
        }
}
        stage("Terraform Plan") {
          steps {
                echo "terraform plan"
              terraformAction("plan")
         }
}
         stage("Terraform Apply") {
           steps {
              echo "terraform apply"
               terraformAction("apply -auto-approve")
          }
     }
  }
}
def terraformAction(String tfAction){
    pwd
    echo ${tfHome}
    echo ${env.PATH}
    sh "terraform ${tfAction} $terraform_path/"
}
